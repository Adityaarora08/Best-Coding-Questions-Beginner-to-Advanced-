#include <iostream>
#include <bits/stdc++.h>
using namespace std;
bool isSafe(int** arr,int n,int x,int y){
    if(arr[x][y]==1)
    return false;
    int row=x;
    int col=y;
    while(row>=0 && col>=0) if(arr[row--][col--]==1) return false;
    row=x;
    col=y;
    while(row>=0 && col<n) if(arr[row--][col++]==1) return false;
    row=x;
    col=y;
    while(row>=0) if(arr[row--][col]==1) return false;
    return true;
}
bool nQueen(int** arr,int n,int x)
{
    if(x>=n)
    return true;
    for(int i=0;i<n;i++){
     if(isSafe(arr,n,x,i)){
        arr[x][i]=1;
        if(nQueen(arr,n,x+1)){
            return true;
        }
        arr[x][i]=0;
    }
    }
    return false;
}
int main()
{
    int n;
    cin>>n;
    int **arr=new int*[n];
    for(int i=0;i<n;i++){
    arr[i]=new int[n];
     for(int j=0;j<n;j++){
     arr[i][j]=0;   
    }
    }
    
    bool ans=nQueen(arr,n,0);
    
    if(ans)
    for(int i=0;i<n;i++){
     for(int j=0;j<n;j++){
     cout<<arr[i][j]<<" ";   
    }
    cout<<endl;
    }
    else
    cout<<"not possible"<<endl;
    return 0;
}
