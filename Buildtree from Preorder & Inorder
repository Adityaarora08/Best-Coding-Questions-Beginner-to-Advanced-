#include <iostream>
using namespace std;
struct Node{
    int data;
    Node*left=NULL;
    Node*right=NULL;
    Node(int data){
        this->data=data;
    }
};
int search(int inorder[],int curr,int e,int s){
    for(int i=s;i<=e;i++){
        if(inorder[i]==curr)
        return i;
    }
    return -1;
}
Node* buildtree(int preorder[],int inorder[],int s,int e){
    if(s>e)
    return NULL;
    static int idx=0;
    int curr=preorder[idx];
    idx++;
    Node *root=new Node(curr);
    if(s==e)
    return root;
    int division=search(inorder,curr,e,s);
    root->left=buildtree(preorder,inorder,s,division-1);
    root->right=buildtree(preorder,inorder,division+1,e);
    return root;
}
void printinorder(Node *root){
    if(root==NULL)
    return;
    printinorder(root->left);
    cout<<root->data<<" ";
    printinorder(root->right);
}
int main()
{
    int preorder[]={1,2,4,3,5};
    int inorder[]={4,2,1,5,3};
    Node*root=buildtree(preorder,inorder,0,4);
    printinorder(root);
    return 0;
}
